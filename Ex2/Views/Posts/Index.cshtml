@model IEnumerable<Ex2.Models.Post>

<div class="mul-col-blue container text-center">
    <canvas  id="myCanvas" width="200" height="60" style="border:1px solid #000000;"></canvas>
    <section id="videoContainer">
        <!-- Introduction -->
        <video width="400" controls>
            <source src="~/media/videos/hanzo-potg.mp4" type="video/mp4">
        </video>
    </section>
</div>

<script>
    const size = 500;
    var c = document.getElementById("myCanvas");
    var ctx = c.getContext("2d");
    ctx.font = "30px Arial";
    ctx.strokeText("Gameplay", 20, 40);
</script>


<div class="container">
    @{
        Dictionary<string, int> counterDictionary = (Dictionary<string, int>)Session["counterDictionary"];
        if (counterDictionary != null)
        {
            string favHeroName = counterDictionary.FirstOrDefault(x => x.Value == counterDictionary.Values.Max()).Key;
            <div class="alert alert-info">Like @Html.Raw(favHeroName)? @Html.ActionLink("click", "Filter", new { heroName = favHeroName }) for more</div>
        }
    }

    @using (Html.BeginForm("Filter", "Posts", FormMethod.Post, new { @class = "form-inline" }))
    {
        <h4>Filter posts by</h4>
        <div class="form-group">
            @Html.DropDownList("heroRole", EnumHelper.GetSelectList(typeof(Ex2.Models.Role)), "Role", new { @class = "form-control" })
        </div>


        <div class="form-group">
            @Html.TextBox("authorName", "", new { @class = "form-control", placeholder  = "Author Name"})
        </div>

        <div class="form-group">
            @Html.TextBox("heroName", "", new { @class = "form-control", placeholder = "Hero Name" })
        </div>

        <input class="btn btn-search-posts" type="submit" value="Search" />
    }

   

    <hr />
    <div class="container row">
        <div class="list-inline">
            @using (Html.BeginForm("GroupByHero", "Posts"))
            {
                <input class="btn btn-lg btn-stats" type="submit" value="Posts Stats" />
                <p class="btn btn-lg btn-add-blog" href="#" role="button">@Html.ActionLink("Add Blog", "Create", null, new { @style = "color: #f99e1a;" })</p>
            }
           
        </div>
    </div>


</div>


<hr />


@foreach (var item in Model)
{
    <div class="blog-post">
        <p class="blog-post-title">@Html.ActionLink(item.Title, "Details", new { id = item.PostID }, new { @style = "text-decoration:none; color: black;" }) </p>
       
        <div class="blog-post-meta">@Convert.ToString(string.Format("{0:dd/MM/yyyy}", item.Date))</div>
        <p>@Html.DisplayFor(modelItem => item.Content)</p>

        <footer class="blockquote-footer">@Html.DisplayFor(modelItem => item.AuthorName), Main <cite>@Html.DisplayFor(modelItem => item.MainHero.Name)</cite></footer>
    @{ if (Request.IsAuthenticated)
    {
        <div>
            @Html.ActionLink("Edit", "Edit", new { id = item.PostID }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.PostID })
        </div>
        }
    }
    </div>
}
