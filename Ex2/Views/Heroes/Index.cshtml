@model IEnumerable<Ex2.Models.Hero>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>
@{
    if (Request.IsAuthenticated)
    {
        <p>
            @Html.ActionLink("Create New", "Create")
        </p>
    }
}


@using (Html.BeginForm())
{
    <div>
        <div class="col-md-3 col-lg-3">Find by name: @Html.TextBox("SearchName")</div>
        <div class="col-md-3 col-lg-3">Find by Role:
        @Html.DropDownList("SearchRole",
           EnumHelper.GetSelectList(typeof(Ex2.Models.Role)),
           "Select hero role")</div>        
        <div class="col-md-3 col-lg-3">Find by HP:@Html.TextBox("SearchHp")</div>
        <input class="col-md-2 col-lg-2" type="submit" value="Search" />
    </div>
}

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HeroRole)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.HP)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.AttackStyle)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model)
{
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HeroRole)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.HP)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AttackStyle)
        </td>
    @{
        if (Request.IsAuthenticated)
        {
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.HeroID }) |
                @Html.ActionLink("Details", "Details", new { id = item.HeroID }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.HeroID })
            </td>
        }
    }
    </tr>
}

</table>
